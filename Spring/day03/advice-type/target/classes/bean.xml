<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置Spring的IoC，把Service对象配置进来 -->
    <bean id="accountService" class="service.impl.AccountServiceImpl"/>

    <!-- Spring中基于xml的AOP配置 -->
    <!-- 配置通知类Logger -->
    <bean id="logger" class="utils.Logger"/>

    <!-- 开始配置AOP -->
    <aop:config>
        <!-- 配置切入点表达式:
                id属性用于指定表达式的唯一标识
                expression属性用于指定表达式内容
             此标签写在aop:aspect标签内部只能当前切面使用
             它还可以写在aop:aspect外面，此时就变成了所有切面可用 -->
        <aop:pointcut id="pt" expression="execution(* service.impl.*.*(..))"/>

        <!-- 开始配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置前置通知：在切入点方法执行之前执行
            <aop:before method="beforePrintLog" pointcut-ref="pt"/> -->
            <!-- 配置后置通知：在切入点方法正常执行之后值。它和异常通知永远只能执行一个
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt"/> -->
            <!-- 配置异常通知：在切入点方法执行产生异常之后执行。它和后置通知永远只能执行一个
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt"/> -->
            <!-- 配置最终通知：无论切入点方法是否正常执行它都会在其后面执行
            <aop:after method="afterPrintLog" pointcut-ref="pt"/> -->

            <!-- 配置环绕通知：详细注释见Logger类 -->
            <aop:around method="aroundPrintLog" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>
</beans>